input {
        file {
                path => "/<path>/*ssl*"
                exclude => ["*.gz","*.processed"]
                sincedb_path => "/var/lib/logstash/bluecoat_ssl"
                start_position => "beginning"
                type => "bluecoat_ssl"
        }

        file {
                path => "/<path>/*main*"
                exclude => ["*.gz","*.processed"]
                sincedb_path => "/var/lib/logstash/bluecoat_main"
                start_position => "beginning"
                type => "bluecoat_main"
        }

        file {
                path => "/<path>/*stream*"
                exclude => ["*.gz","*.processed"]
                sincedb_path => "/var/lib/logstash/bluecoat_streaming"
                start_position => "beginning"
                type => "bluecoat_streaming"
        }
}

filter {
        if [type] == "bluecoat_ssl" {

                grok {
                        match => [ "message","%{TIMESTAMP_ISO8601:timestamp} %{INT:time-taken} %{IPORHOST:c-ip} %{DATA:cs-username} %{DATA:cs-auth-group} %{DATA:x-exception-id} %{WORD:sc-filter-result} \"%{DATA:cs-categories}\" %{INT:sc-status} %{DATA:s-action} %{WORD:cs-method} %{DATA:rs-content-type} %{DATA:cs-uri-scheme} %{IPORHOST:cs-host} %{DATA:r-ip} %{INT:cs-uri-port} %{DATA:cs-uri-extension} %{DATA:cs-user-agent} %{IP:s-ip} %{INT:sc-bytes} %{INT:cs-bytes} %{DATA:x-virus-id} %{DATA:x-rs-certificate-observed-errors} %{DATA:x-cs-ocsp-error} %{DATA:x-rs-ocsp-error} %{DATA:x-rs-connection-negotiated-cipher-strength} %{DATA:x-cs-certificate-hostname} \"?%{DATA:x-rs-certificate-hostname-category}\"?"]
                }
                date {
                        #locale => "en"
                        timezone => "Etc/UTC"
                        match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
                        target => "@timestamp"
                }
        }

        if [type] == "bluecoat_main" {
                grok {
                        match => ["message","%{TIMESTAMP_ISO8601:timestamp} %{INT:time-taken} %{IPORHOST:c-ip} %{DATA:cs-username} %{DATA:cs-auth-group} %{DATA:x-exception-id} %{WORD:sc-filter-result} \"%{DATA:cs-categories}\" %{DATA:cs-referer} %{INT:status} %{DATA:s-action} %{WORD:cs-method} %{DATA:rs-content-type} %{DATA:cs-uri-scheme} %{IPORHOST:cs-host} %{DATA:r-ip} %{INT:cs-uri-port} %{DATA:cs-uri-path} %{DATA:cs-uri-query} %{DATA:cs-uri-extension} \"?%{DATA:cs-user-agent}\"? %{IP:s-ip} %{INT:sc-bytes} %{INT:cs-bytes} %{DATA:x-virus-id} \"%{DATA:x-bluecoat-application-name}\" \"%{DATA:x-bluecoat-application-operation}\""]
                }
                date {
                        #locale => "en"
                        timezone => "Etc/UTC"
                        match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
                        target => "@timestamp"
                }
        }

        if [type] == "bluecoat_streaming" {
                grok {
                        match => ["message","%{TIMESTAMP_ISO8601:timestamp} %{INT:time-taken} %{IPORHOST:c-ip} %{INT:status} %{WORD:s-action} %{INT:sc-bytes} %{INT:rs-bytes} %{WORD:cs-method} %{DATA:cs-uri-scheme} %{IPORHOST:cs-host} %{IP:r-ip} %{INT:cs-uri-port} %{DATA:cs-uri-path} %{DATA:cs-uri-query} %{DATA:cs-username} %{DATA:cs-auth-group} %{DATA:cs-referer} \\?\"%{DATA:cs-user-agent}\\?\" %{DATA:c-starttime} %{DATA:filelength} %{DATA:filesize} %{DATA:avgbandwidth} %{DATA:x-rs-streaming-content} %{DATA:x-streaming-rtmp-app-name} %{DATA:x-streaming-rtmp-swf-url} %{DATA:x-streaming-rtmp-page-url} %{IP:s-ip} %{IP:s-dns} %{DATA:s-session-id} %{DATA:x-cache-info}"]
                }
                date {
                        #locale => "en"
                        timezone => "Etc/UTC"
                        match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
                        target => "@timestamp"
                }
        }
}

output {
        if [type] == "bluecoat_ssl" or [type] == "bluecoat_streaming" or [type] == "bluecoat_main" {
                elasticsearch {
                        hosts => ["<elasticsearch server>","<elasticsearch server>"]
                        index => "logstash-bluecoat-%{+YYYY.MM.dd}"
                }
                #stdout { codec => rubydebug }
        }
}
